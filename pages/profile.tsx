import React, { useEffect, useState } from 'react'
import Head from 'next/head'
import PageLayouts from 'layouts/PageLayouts'
import photos from "assets/photo.jpeg"
import cover from "assets/cover.png"
import Image from "next/image"
import axios from 'axios'
import jwt_decode from "jwt-decode"
import { useRouter } from 'next/router'

const Profile = () => {
    const [username, setUsername] = useState("")
    const [token, setToken] = useState("")
    const [expired, setExpired] = useState(0)
    const [email, setEmail] = useState("")

    const [users, setUsers] = useState({
        phone: "",
        education: "",
        career: "",
        country: "",
        about: "",
        certification: ""
    })

    const router = useRouter()

    useEffect(() => {
        RefreshToken()
        getAllUsers()
    }, [])

    const AxiosHandlerInterceptors = axios.create()
    AxiosHandlerInterceptors.interceptors.request.use(async (config: any) => {
        const currentDateTime = new Date()

        if (expired * 1000 < currentDateTime.getTime()) {
            const response = await axios.get("http://localhost:8888/v1/token")
            config.headers.Authorization = `Bearer ${response.data.accesstoken}`
            setToken(response.data.accesstoken)

            const decoded: any = jwt_decode(response.data.accesstoken)
            console.log(decoded);
            setUsername(decoded.username)
            setExpired(decoded.exp)
            setEmail(decoded.email)
            setUsers(response.data.data[0])
        }
        return config
    }, (error) => { return Promise.reject(error) })

    const RefreshToken = async () => {
        try {
            const response = await axios.get("http://localhost:8888/v1/token")
            setToken(response.data.accesstoken)
            console.log(response.data.accesstoken)

            const decoded: any = jwt_decode(response.data.accesstoken)
            console.log(decoded);
            setUsername(decoded.username)
            setExpired(decoded.exp)
            setEmail(decoded.email)
        } catch (error: any) {
            if (error.response) {
                router.push("/auth/login")
            }
        }
    }

    const getAllUsers = async () => {
        const response = await AxiosHandlerInterceptors.get("http://localhost:8888/v1/users", {
            headers: {
                Authorization: `Bearer ${token}`
            }
        })
        console.log(response.data[0])
    }

    return (
        <React.Fragment>
            <Head>
                <title>Frontend User Service</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <PageLayouts username={username.toLocaleUpperCase()}>
                <div className="w-full mt-3 px-4 md:px-0">
                    <div className="w-full relative overflow-hidden rounded-xl bg-base-200 h-[100px] md:h-[200px]">
                        <h3 className="font-bold w-full h-fit text-xl text-center mr-2">
                            <Image className='w-full absolute h-fit md:h-auto' src={cover} alt={'image'} />
                        </h3>
                    </div>
                    <div className="w-full mb-10">
                        <div className="ml-0 md:ml-10 -mt-16">
                            <div className="h-[175px] ml-5 md:ml-0 w-[175px] mb-2 md:mb-4">
                                <div className="rounded-full md:h-[175px] h-[150px] w-[150px] md:w-[175px] bg-gray-700 absolute z-30">
                                    <Image className='rounded-full' src={photos} alt={'image'} />
                                </div>
                            </div>
                            <div className="flex flex-col md:flex-row justify-between">
                                <div className="mb-10 md:mb-0">
                                    <h3 className="font-bold text-2xl text-left mt-1 md:mt-3">{username}</h3>
                                    <h3 className="font-semibold text-md text-left">{users.career} at Startup Indonesia</h3>
                                    <h3 className="font-normal text-sm text-left mt-3 text-gray-400">{users.country}</h3>

                                    <p className="text-sm font-normal text-gray-500">Token Expired in {expired}</p>

                                    <div className="mt-6">
                                        <h3 className="font-semibold text-md text-left">About Personal</h3>
                                        <h3 className="font-normal text-sm text-left mt-1 text-gray-400">{users.about}</h3>
                                    </div>

                                    <div className="mt-6">
                                        <h3 className="font-semibold text-md text-left">Email Address</h3>
                                        <h3 className="font-normal text-sm text-left mt-1 text-gray-400">{email}</h3>
                                    </div>

                                    <div className="mt-6">
                                        <h3 className="font-semibold text-md text-left">Phone Number</h3>
                                        <h3 className="font-normal text-sm text-left mt-1 text-gray-400">{users.phone}</h3>
                                    </div>
                                </div>

                                <div className="grid grid-cols-1 md:grid-cols-2 gap-3 md:gap-5">
                                    <div className="bg-gray-700 rounded-xl p-4">
                                        <h3 className="font-bold mb-4 text-xl text-left">Work Experience</h3>
                                        <h3 className="font-semibold text-md text-left">{users.career} at Startup Indonesia</h3>
                                        <h3 className="font-normal text-sm text-left mt-1 text-gray-400">Jombang, East Java</h3>
                                    </div>
                                    <div className="bg-gray-700 rounded-xl p-4">
                                        <h3 className="font-bold mb-4 text-xl text-left">Education</h3>
                                        <h3 className="font-semibold text-md text-left">{users.education}</h3>
                                        <h3 className="font-normal text-sm text-left mt-1 text-gray-400">{users.country}</h3>
                                    </div>
                                    <div className="bg-gray-700 rounded-xl p-4">
                                        <h3 className="font-bold mb-4 text-xl text-left">Certifications</h3>
                                        <h3 className="font-semibold text-md text-left">{users.certification}</h3>
                                        <h3 className="font-normal text-sm text-left mt-1 text-gray-400">Desember 2022</h3>
                                    </div>
                                    <div className="bg-gray-700 rounded-xl p-4">
                                        <h3 className="font-bold mb-4 text-xl text-left">Careers</h3>
                                        <h3 className="font-semibold text-md text-left">Frontend Engineer</h3>
                                        <h3 className="font-normal text-sm text-left mt-1 text-gray-400">2 Years Experience</h3>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <h3 className="font-normal mb-4 text-xs text-center">&copy;2022 Ferdian Ahmad Rozikin</h3>
            </PageLayouts>
        </React.Fragment>
    )
}

export default Profile